#include <stdio.h>
#include <stdlib.h>

typedef struct Node {
    int data;
    struct Node* next;
} Node;

Node* head = NULL;

// Insert at end
void insertEnd(int value) {
    Node* newNode = (Node*)malloc(sizeof(Node));
    newNode->data = value;
    if (head == NULL) {
        newNode->next = newNode;
        head = newNode;
        return;
    }
    Node* temp = head;
    while (temp->next != head)
        temp = temp->next;
    temp->next = newNode;
    newNode->next = head;
}

// Delete by value
void deleteNode(int value) {
    if (head == NULL) {
        printf("List is empty\n");
        return;
    }

    Node *curr = head, *prev = NULL;

    // Deleting head node
    if (head->data == value) {
        if (head->next == head) {
            free(head);
            head = NULL;
            return;
        }
        while (curr->next != head)
            curr = curr->next;
        curr->next = head->next;
        free(head);
        head = curr->next;
        return;
    }

    prev = head;
    curr = head->next;
    while (curr != head && curr->data != value) {
        prev = curr;
        curr = curr->next;
    }

    if (curr == head) {
        printf("Value not found\n");
        return;
    }

    prev->next = curr->next;
    free(curr);
}

// Display circular list
void display() {
    if (head == NULL) {
        printf("List is empty\n");
        return;
    }
    Node* temp = head;
    printf("Circular List: ");
    do {
        printf("%d ", temp->data);
        temp = temp->next;
    } while (temp != head);
    printf("\n");
}

// Main menu
int main() {
    int choice, value;
    while (1) {
        printf("\n1.Insert End\n2.Delete by Value\n3.Display\n4.Exit\nEnter choice: ");
        scanf("%d", &choice);
        switch (choice) {
            case 1: printf("Enter value: ");
                    scanf("%d", &value);
                    insertEnd(value);
                    break;
            case 2: printf("Enter value to delete: ");
                    scanf("%d", &value);
                    deleteNode(value);
                    break;
            case 3: display(); break;
            case 4: return 0;
            default: printf("Invalid choice\n");
        }
    }
}
