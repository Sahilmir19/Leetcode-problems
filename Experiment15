#include <stdio.h>
#include <stdlib.h>

typedef struct Node {
    int d; struct Node *l, *r;
} Node;

Node* new(int v) {
    Node* n = malloc(sizeof(Node));
    n->d = v; n->l = n->r = NULL; return n;
}

Node* ins(Node* r, int v) {
    if (!r) return new(v);
    if (v < r->d) r->l = ins(r->l, v);
    else r->r = ins(r->r, v);
    return r;
}

void in(Node* r) {
    if (r) { in(r->l); printf("%d ", r->d); in(r->r); }
}

Node* sea(Node* r, int v) {
    if (!r || r->d == v) return r;
    return v < r->d ? sea(r->l, v) : sea(r->r, v);
}

Node* min(Node* r) {
    while (r->l) r = r->l;
    return r;
}

Node* del(Node* r, int v) {
    if (!r) return NULL;
    if (v < r->d) r->l = del(r->l, v);
    else if (v > r->d) r->r = del(r->r, v);
    else {
        if (!r->l) { Node* t = r->r; free(r); return t; }
        if (!r->r) { Node* t = r->l; free(r); return t; }
        Node* t = min(r->r);
        r->d = t->d;
        r->r = del(r->r, t->d);
    }
    return r;
}

int main() {
    Node* r = NULL;
    r = ins(r, 50); ins(r, 30); ins(r, 70);
    ins(r, 20); ins(r, 40); ins(r, 60);
    in(r); printf("\n");
    r = del(r, 30);
    in(r); printf("\n");
    printf(sea(r, 60) ? "Found" : "Not Found");
}
